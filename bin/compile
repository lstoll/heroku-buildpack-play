#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Parse args
BUILD_DIR=$1
CACHE_DIR=$2

PLAY_PATH=".play"
IVY_PATH=".ivy2"

# OpenJDK 7

cd $BUILD_DIR
if [ -d "$CACHE_DIR/.jdk7" ]; then
  echo -n "copying jdk to app"
  cp -r "$CACHE_DIR/.jdk7" $BUILD_DIR
  echo "done"
fi

OPENJDK7_URL="http://heroku-jvm-langpack-java.s3.amazonaws.com/openjdk7-heroku-alpha.tar.gz"

if [ ! -d "$BUILD_DIR/.jdk7" ]; then
  echo -n "-----> Installing OpenJDK7 alpha build (to .jdk7)....."
  mkdir "$BUILD_DIR/.jdk7"
  cd "$BUILD_DIR/.jdk7"
  curl --silent --max-time 180 --location $OPENJDK7_URL | tar xz
  echo " done"
fi

export JAVA_HOME="$BUILD_DIR/.jdk7"

# Change dir to handle relative paths
cd $BUILD_DIR

# Unpack cache
for DIR in $PLAY_PATH $IVY_PATH ; do
  rm -rf $DIR
  if [ -d $CACHE_DIR/$DIR ]; then
    cp -r $CACHE_DIR/$DIR $DIR
  fi
done

check_compile_status()
{
  if [ "${PIPESTATUS[*]}" != "0 0" ]; then
    echo " !     Failed to build Play! application"
    rm -rf $CACHE_DIR/$PLAY_PATH
    echo " !     Cleared Play! framework from cache"
    exit 1
  fi
}

# Install Play! if not already
if [ ! -d $PLAY_PATH ]; then
  PLAY_URL="https://s3.amazonaws.com/heroku-jvm-langpack-play/play-heroku.tar.gz"

  echo -n "-----> Installing Play!....."
  curl --silent --max-time 150 --location $PLAY_URL | tar xz
  check_compile_status
  chmod +x $PLAY_PATH/play
  echo " done"
fi

PLAY_SETTINGS_URL="http://s3.amazonaws.com/heroku-jvm-langpack-play/ivysettings.xml"

echo -n "-----> Installing ivysettings.xml....."
if [ -f .ivy2/ivysettings.xml ]; then
  rm .ivy2/ivysettings.xml 
fi
curl --silent --max-time 10 --location $PLAY_SETTINGS_URL --create-dirs --output .ivy2/ivysettings.xml
echo " done"

# Build app
echo "-----> Building Play! application..."
$PLAY_PATH/play version | sed -u 's/^/       /'

# Precompile the Play! application at the root of $BUILD_DIR
APP_DIR=./
echo "       Building Play! application at directory $APP_DIR"

DEPENDENCIES_CMD="$PLAY_PATH/play dependencies $APP_DIR --forceCopy --silent -Duser.home=$BUILD_DIR 2>&1"
echo "       Resolving dependencies: $DEPENDENCIES_CMD"
eval "$DEPENDENCIES_CMD" | sed -u 's/^/       /'
check_compile_status

PRECOMPILE_CMD="$PLAY_PATH/play precompile $APP_DIR --silent 2>&1"
echo "       Precompiling: $PRECOMPILE_CMD" 
eval "$PRECOMPILE_CMD" | sed -u 's/^/       /'
check_compile_status

# Repack Play! framework into cache
mkdir -p $CACHE_DIR
for DIR in $PLAY_PATH $IVY_PATH ; do
  rm -rf $CACHE_DIR/$DIR
  cp -r $DIR $CACHE_DIR/$DIR
done

# Remove build time dependencies from slug
# (Note: runtime modules are copied to slug with --forceCopy option)
rm -fr $PLAY_PATH/modules
rm -fr $IVY_PATH

# Warn if no Procfile is present
if [ ! -f Procfile ]; then
  echo "-----> No Procfile found. Will use the following default process: "
  echo "       play run --http.port=\$PORT \$PLAY_OPTS"
fi
